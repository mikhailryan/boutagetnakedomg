/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package theShop;

import config.db_connector;
import java.awt.Component;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.event.CellEditorListener;
import javax.swing.event.ChangeEvent;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.TableColumn;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author SCC-COLLEGE
 */
public class users_table extends javax.swing.JInternalFrame {

    /**
     * Creates new form users_table
     */
    public users_table() {
        initComponents();   
        display_data();
        
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI bi = (BasicInternalFrameUI)this.getUI();
        bi.setNorthPane(null);
    }
    
    private void display_data(){
        try {
            db_connector dbcon = new db_connector();
            ResultSet result = dbcon.getData("SELECT id AS 'ID', name AS 'Full Name', username AS 'Username', email AS 'Email Address', status AS 'Account Status' FROM user WHERE role = 'user'");
            users_table.setModel(DbUtils.resultSetToTableModel(result));
            
            users_table.getColumnModel().getColumn(0).setPreferredWidth(50);  // ID
            users_table.getColumnModel().getColumn(1).setPreferredWidth(120); // Full Name
            users_table.getColumnModel().getColumn(2).setPreferredWidth(120); // Username
            users_table.getColumnModel().getColumn(3).setPreferredWidth(200); // Email Address
            users_table.getColumnModel().getColumn(4).setPreferredWidth(100); // Account Status
            
            String[] statuses = {"pending", "inactive", "active"};
            JComboBox<String> statusComboBox = new JComboBox<>(statuses);
            TableColumn statusColumn = users_table.getColumnModel().getColumn(4);
            DefaultCellEditor editor = new DefaultCellEditor(statusComboBox);
            statusColumn.setCellEditor(editor);
            
            
            statusColumn.setCellEditor(new DefaultCellEditor(statusComboBox) {
                public Component getTableCellEditorComponent(users_table table, Object value, boolean isSelected, int row, int column) {
                    JComboBox<String> comboBox = (JComboBox<String>) super.getTableCellEditorComponent(users_table, value, isSelected, row, column);

                    if (value != null) {
                        comboBox.setSelectedItem(value);
                    }

                    return comboBox;
                }
            });
            
            editor.addCellEditorListener(new CellEditorListener() {  
                @Override
                public void editingStopped(ChangeEvent e) {
                    int row = users_table.getSelectedRow(); 

                    if (row == -1) {
                        return;
                    }

                    String new_status = users_table.getValueAt(row, 4).toString(); // Get new status
                    String id = users_table.getValueAt(row, 0).toString(); // Get User ID

                    db_connector.updateDatabase("UPDATE user SET status = '"+ new_status +"' WHERE id = '"+ id +"'");

                }

                @Override
                public void editingCanceled(ChangeEvent ce) {
                    
                }
            });
        } catch (SQLException e) {
            System.out.println("Can't Connect to Database: " + e.getMessage());
        } 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        users_table = new javax.swing.JTable();

        setPreferredSize(new java.awt.Dimension(650, 380));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(null);

        users_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(users_table);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(0, 0, 650, 430);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 650, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 430, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable users_table;
    // End of variables declaration//GEN-END:variables
}
