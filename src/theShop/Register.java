package theShop;


import config.Utility;
import config.db_connector;
import java.awt.*;
import java.awt.event.*;
import java.sql.SQLException;
import java.util.Arrays;
import javax.swing.*;
import javax.swing.border.EmptyBorder;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

public class Register extends javax.swing.JFrame {
    
    db_connector conn = new db_connector();
    
    /** Creates new form Login */
    public Register() {
        initComponents();
        
        unFocus();
        
        TitledBorder roleBorder = BorderFactory.createTitledBorder(
            BorderFactory.createLineBorder(new Color(19,122,127), 1), "Role"
        );
        roleBorder.setTitleFont(new Font("Arial", Font.BOLD, 11));
        role_panel.setBorder(roleBorder);
        Utility.setBorders(name_input, username_input, email_input, password_input, password1_input);

        JLabel[] labels = {user, pass, leek, show_pass, email_pic, show_pass1, pass1, jLabel2, name_pic};
        String[] paths = {"user.png", "padlock.png", "somelogoidkfck.png", "hidden.png", "email.png", "hidden.png", "access.png", "setting.png", "id-card.png"};
        Utility.setIcons(labels, paths);
        
        ActionListener roleSelectionListener = (ActionEvent e) -> {
            role_panel.setBorder(BorderFactory.createTitledBorder(
                    BorderFactory.createLineBorder(new Color(19,122,127), 1), "Role"
            ));
            displayError(role_error, "");
        };

        user_role.addActionListener(roleSelectionListener);
        admin_role.addActionListener(roleSelectionListener);
        
        minimize_button.setIcon(resizeImage("/images/minimize-sign.png", minimize_button));
        close_button.setIcon(resizeImage("/images/close.png", close_button));
    }

    private ImageIcon resizeImage(String path, JLabel label) {
        ImageIcon icon = new ImageIcon(getClass().getResource(path));
        Image img = icon.getImage().getScaledInstance(label.getWidth() - 15, label.getHeight() - 15, Image.SCALE_SMOOTH);
        return new ImageIcon(img);
    }
    
    public void setInvalidBorder(JTextField field) {
        field.setBorder(BorderFactory.createCompoundBorder(
            new LineBorder(Color.RED, 2), 
            new EmptyBorder(0, 3, 0, 0) 
        ));
    }

    public void resetBorder(JTextField field) {
        field.setBorder(BorderFactory.createCompoundBorder(
            new LineBorder(new Color(19,122,127), 1),
            new EmptyBorder(0, 3, 0, 0) 
        ));
    }
    
    private void displayError(JLabel field, String message) {
        field.setText(message);
        field.setForeground(java.awt.Color.RED);
    }
    
    private void unFocus(){
        setFocusTraversalPolicy(new FocusTraversalPolicy() {
            @Override
            public Component getInitialComponent(Window window) {
                return null; 
            }

            @Override
            public Component getFirstComponent(Container focusCycleRoot) { return null; }
            @Override
            public Component getLastComponent(Container focusCycleRoot) { return null; }
            @Override
            public Component getDefaultComponent(Container focusCycleRoot) { return null; }
            @Override
            public Component getComponentAfter(Container focusCycleRoot, Component aComponent) { return null; }
            @Override
            public Component getComponentBefore(Container focusCycleRoot, Component aComponent) { return null; }

            
        });
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        user = new javax.swing.JLabel();
        pass = new javax.swing.JLabel();
        username_input = new javax.swing.JTextField();
        register_button = new javax.swing.JButton();
        show_pass = new javax.swing.JLabel();
        password_input = new javax.swing.JPasswordField();
        email_input = new javax.swing.JTextField();
        email_pic = new javax.swing.JLabel();
        show_pass1 = new javax.swing.JLabel();
        password1_input = new javax.swing.JPasswordField();
        pass1 = new javax.swing.JLabel();
        role_panel = new javax.swing.JPanel();
        admin_role = new javax.swing.JRadioButton();
        user_role = new javax.swing.JRadioButton();
        role_error = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        to_login = new javax.swing.JLabel();
        name_input = new javax.swing.JTextField();
        name_pic = new javax.swing.JLabel();
        name_error = new javax.swing.JLabel();
        email_error = new javax.swing.JLabel();
        password_error = new javax.swing.JLabel();
        username_error = new javax.swing.JLabel();
        password1_error = new javax.swing.JLabel();
        close_button = new javax.swing.JLabel();
        minimize_button = new javax.swing.JLabel();
        leek = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(19, 122, 127));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(204, 255, 255));
        jPanel2.setPreferredSize(new java.awt.Dimension(290, 340));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Registration");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, 320, 40));

        user.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/user.png"))); // NOI18N
        jPanel2.add(user, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 150, 30, 30));

        pass.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/padlock.png"))); // NOI18N
        jPanel2.add(pass, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 250, 30, 30));

        username_input.setFont(new java.awt.Font("Arial", 3, 10)); // NOI18N
        username_input.setForeground(new java.awt.Color(153, 153, 153));
        username_input.setText("Enter username...");
        username_input.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                username_inputFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                username_inputFocusLost(evt);
            }
        });
        username_input.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                username_inputActionPerformed(evt);
            }
        });
        jPanel2.add(username_input, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 150, 200, 30));

        register_button.setBackground(new java.awt.Color(255, 255, 255));
        register_button.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        register_button.setText("Register");
        register_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                register_buttonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                register_buttonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                register_buttonMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                register_buttonMousePressed(evt);
            }
        });
        register_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                register_buttonActionPerformed(evt);
            }
        });
        jPanel2.add(register_button, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 450, 200, -1));

        show_pass.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/hidden.png"))); // NOI18N
        show_pass.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                show_passMouseClicked(evt);
            }
        });
        jPanel2.add(show_pass, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 250, 30, 30));

        password_input.setText("Enter password...");
        password_input.setEchoChar((char) 0);
        password_input.setForeground(Color.GRAY);
        password_input.setFont(new Font("Arial", Font.ITALIC, 10));
        password_input.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                password_inputFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                password_inputFocusLost(evt);
            }
        });
        jPanel2.add(password_input, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 250, 200, 30));

        email_input.setFont(new java.awt.Font("Arial", 3, 10)); // NOI18N
        email_input.setForeground(new java.awt.Color(153, 153, 153));
        email_input.setText("Enter email...");
        email_input.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                email_inputFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                email_inputFocusLost(evt);
            }
        });
        email_input.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                email_inputActionPerformed(evt);
            }
        });
        jPanel2.add(email_input, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 200, 200, 30));

        email_pic.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/email.png"))); // NOI18N
        jPanel2.add(email_pic, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 200, 30, 30));

        show_pass1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/hidden.png"))); // NOI18N
        show_pass1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                show_pass1MouseClicked(evt);
            }
        });
        jPanel2.add(show_pass1, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 300, 30, 30));

        password1_input.setText("Confirm password...");
        password1_input.setEchoChar((char) 0);
        password1_input.setForeground(Color.GRAY);
        password1_input.setFont(new Font("Arial", Font.ITALIC, 10));
        password1_input.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                password1_inputFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                password1_inputFocusLost(evt);
            }
        });
        password1_input.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                password1_inputMouseEntered(evt);
            }
        });
        password1_input.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                password1_inputActionPerformed(evt);
            }
        });
        jPanel2.add(password1_input, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 300, 200, 30));

        pass1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/access.png"))); // NOI18N
        jPanel2.add(pass1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 300, 30, 30));

        role_panel.setBackground(new java.awt.Color(19, 122, 127));
        role_panel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(""), "Role", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 11), new java.awt.Color(19, 122, 127))); // NOI18N
        role_panel.setOpaque(false);
        role_panel.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                role_panelFocusGained(evt);
            }
        });
        role_panel.setLayout(null);

        admin_role.setBackground(new java.awt.Color(134, 206, 203));
        buttonGroup1.add(admin_role);
        admin_role.setFont(new java.awt.Font("Arial", 1, 10)); // NOI18N
        admin_role.setForeground(new java.awt.Color(19, 122, 127));
        admin_role.setText("Admin");
        admin_role.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                admin_roleActionPerformed(evt);
            }
        });
        role_panel.add(admin_role);
        admin_role.setBounds(120, 20, 60, 30);

        user_role.setBackground(new java.awt.Color(134, 206, 203));
        buttonGroup1.add(user_role);
        user_role.setFont(new java.awt.Font("Arial", 1, 10)); // NOI18N
        user_role.setForeground(new java.awt.Color(19, 122, 127));
        user_role.setText("User");
        role_panel.add(user_role);
        user_role.setBounds(20, 20, 60, 30);

        role_error.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        role_error.setForeground(new java.awt.Color(255, 0, 0));
        role_error.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        role_panel.add(role_error);
        role_error.setBounds(40, 0, 160, 10);

        jPanel2.add(role_panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 360, 200, 70));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/setting.png"))); // NOI18N
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 350, 30, 30));

        jLabel3.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Already have an account?");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 480, 160, -1));

        to_login.setFont(new java.awt.Font("Arial", 1, 10)); // NOI18N
        to_login.setForeground(new java.awt.Color(0, 0, 204));
        to_login.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        to_login.setText("Sign in");
        to_login.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                to_loginMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                to_loginMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                to_loginMouseExited(evt);
            }
        });
        jPanel2.add(to_login, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 480, 70, -1));

        name_input.setFont(new java.awt.Font("Arial", 3, 10)); // NOI18N
        name_input.setForeground(new java.awt.Color(153, 153, 153));
        name_input.setText("Enter full name...");
        name_input.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                name_inputFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                name_inputFocusLost(evt);
            }
        });
        jPanel2.add(name_input, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 100, 200, 30));

        name_pic.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/id-card.png"))); // NOI18N
        jPanel2.add(name_pic, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 100, 30, 30));

        name_error.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        name_error.setForeground(new java.awt.Color(255, 0, 0));
        name_error.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jPanel2.add(name_error, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 90, 160, 10));

        email_error.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        email_error.setForeground(new java.awt.Color(255, 0, 0));
        email_error.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jPanel2.add(email_error, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 190, 160, 10));

        password_error.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        password_error.setForeground(new java.awt.Color(255, 0, 0));
        password_error.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jPanel2.add(password_error, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 240, 160, 10));

        username_error.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        username_error.setForeground(new java.awt.Color(255, 0, 0));
        username_error.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jPanel2.add(username_error, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 140, 160, 10));

        password1_error.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        password1_error.setForeground(new java.awt.Color(255, 0, 0));
        password1_error.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jPanel2.add(password1_error, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 290, 160, 10));

        close_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                close_buttonMouseClicked(evt);
            }
        });
        jPanel2.add(close_button, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 0, 30, 30));

        minimize_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimize_buttonMouseClicked(evt);
            }
        });
        jPanel2.add(minimize_button, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 0, 30, 30));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 0, 320, 530));

        leek.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/somelogoidkfck.png"))); // NOI18N
        jPanel1.add(leek, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, 500, 460));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    private void username_inputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_username_inputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_username_inputActionPerformed

    private void username_inputFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_username_inputFocusGained
        if (username_input.getText().equals("Enter username...")) {
            username_input.setText("");  
            username_input.setForeground(Color.BLACK); 
        }
    }//GEN-LAST:event_username_inputFocusGained

    private void username_inputFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_username_inputFocusLost
        if (username_input.getText().trim().isEmpty()) {
            username_input.setText("Enter username...");
            username_input.setForeground(Color.GRAY);
        }
        resetBorder(username_input);
        displayError(username_error, "");
    }//GEN-LAST:event_username_inputFocusLost

    private void register_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_register_buttonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_register_buttonActionPerformed

    private void register_buttonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_register_buttonMouseEntered
        register_button.setBackground(new Color(134,206,203));
    }//GEN-LAST:event_register_buttonMouseEntered

    private void register_buttonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_register_buttonMouseExited
        register_button.setBackground(Color.WHITE);
    }//GEN-LAST:event_register_buttonMouseExited

    private void password_inputFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_password_inputFocusGained
        if (password_input.getText().equals("Enter password...")) {
            password_input.setText("");
            password_input.setEchoChar('•');
            password_input.setForeground(Color.BLACK);
            password_input.setFont(new Font("Arial", Font.PLAIN, 10));
        }
    }//GEN-LAST:event_password_inputFocusGained

    private void password_inputFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_password_inputFocusLost
        if (password_input.getText().trim().isEmpty()) {
            password_input.setText("Enter password...");
            password_input.setEchoChar((char) 0);
            password_input.setForeground(Color.GRAY);
            password_input.setFont(new Font("Arial", Font.ITALIC, 10));
        }
        resetBorder(password_input);
        displayError(password_error, "");
    }//GEN-LAST:event_password_inputFocusLost

    private void register_buttonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_register_buttonMousePressed
        
    }//GEN-LAST:event_register_buttonMousePressed
    boolean pass_visible = false;
    private void show_passMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_show_passMouseClicked
        pass_visible = !pass_visible;
        String currentText = password_input.getText().trim();

        if (pass_visible) {
            if (!currentText.equals("Enter password...")) {
                password_input.setEchoChar((char) 0);
            }
            show_pass.setIcon(resizeImage("/images/eye.png", show_pass));
        } else {
            if (!currentText.equals("Enter password...")) {
                password_input.setEchoChar('•');
            }
            show_pass.setIcon(resizeImage("/images/hidden.png", show_pass));
        }
    }//GEN-LAST:event_show_passMouseClicked

    private void email_inputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_email_inputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_email_inputActionPerformed

    private void password1_inputFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_password1_inputFocusGained
        if (password1_input.getText().equals("Confirm password...")) {
            password1_input.setText("");
            password1_input.setEchoChar('•');
            password1_input.setForeground(Color.BLACK);
            password1_input.setFont(new Font("Arial", Font.PLAIN, 10));
        } 
    }//GEN-LAST:event_password1_inputFocusGained

    private void password1_inputFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_password1_inputFocusLost
        if (password1_input.getText().trim().isEmpty()) {
            password1_input.setText("Confirm password...");
            password1_input.setEchoChar((char) 0);
            password1_input.setForeground(Color.GRAY);
            password1_input.setFont(new Font("Arial", Font.ITALIC, 10));
        }
        resetBorder(password1_input); 
        displayError(password1_error, "");
    }//GEN-LAST:event_password1_inputFocusLost
    
    boolean pass_visible1 = false;
    private void show_pass1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_show_pass1MouseClicked
        pass_visible1 = !pass_visible1;
        String currentText = password1_input.getText().trim();

        if (pass_visible1) {
            if (!currentText.equals("Confirm password...")) {
                password1_input.setEchoChar((char) 0);
            }
            show_pass1.setIcon(resizeImage("/images/eye.png", show_pass1));
        } else {
            if (!currentText.equals("Confirm password...")) {
                password1_input.setEchoChar('•');
            }
            show_pass1.setIcon(resizeImage("/images/hidden.png", show_pass1));
        }
    }//GEN-LAST:event_show_pass1MouseClicked

    private void password1_inputMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_password1_inputMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_password1_inputMouseEntered

    private void email_inputFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_email_inputFocusGained
        if (email_input.getText().equals("Enter email...")) {
            email_input.setText("");  
            email_input.setForeground(Color.BLACK);
        }      
    }//GEN-LAST:event_email_inputFocusGained

    private void email_inputFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_email_inputFocusLost
        if (email_input.getText().trim().isEmpty()) {
            email_input.setText("Enter email...");
            email_input.setForeground(Color.GRAY);
        }
        resetBorder(email_input);
        displayError(email_error, "");
    }//GEN-LAST:event_email_inputFocusLost

    private void admin_roleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_admin_roleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_admin_roleActionPerformed

    private void to_loginMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_to_loginMouseEntered
        to_login.setForeground(new Color(134,206,203));
    }//GEN-LAST:event_to_loginMouseEntered

    private void to_loginMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_to_loginMouseExited
        to_login.setForeground(new Color(0,0,204));
    }//GEN-LAST:event_to_loginMouseExited

    private void to_loginMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_to_loginMouseClicked
        new Login().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_to_loginMouseClicked

    private void password1_inputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_password1_inputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_password1_inputActionPerformed

    private void register_buttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_register_buttonMouseClicked
        
        boolean valid_to_register = true;
        
        String name = name_input.getText().trim();
        String username = username_input.getText().trim();
        String email = email_input.getText().trim();
        String password = new String(password_input.getPassword());
        String password1 = new String(password1_input.getPassword());
        String role = admin_role.isSelected() ? "Admin" : "User";
        String status = "pending";
        
        String hashedPassword = Utility.hashPassword(password);
        
        if(name.isEmpty() || name.equals("Enter full name...")) {
            setInvalidBorder(name_input);
            displayError(name_error, "Field Required!");
            valid_to_register = false;
        }
        if(username.isEmpty() || username.equals("Enter username...")) {
            setInvalidBorder(username_input);
            displayError(username_error, "Field Required!");
            valid_to_register = false;
        }
        if(email.isEmpty() || email.equals("Enter email...")) { 
            setInvalidBorder(email_input); 
            displayError(email_error, "Field Required!");
            valid_to_register = false;
        } else if(!Utility.isValidEmail(email)) { 
            setInvalidBorder(email_input); 
            displayError(email_error, "Invalid Email!");
            valid_to_register = false;
        }
        if(password.isEmpty() || password.equals("Enter password...")) {
            setInvalidBorder(password_input);
            displayError(password_error, "Field Required!");
            valid_to_register = false;
        } else if(password.length() < 8) {
            setInvalidBorder(password_input);
            displayError(password_error, "Password Too Short!");
            valid_to_register = false;
        } else {
            if(password1.isEmpty() || password1.equals("Confirm password...")) {
                setInvalidBorder(password1_input);
                displayError(password1_error, "Field Required!");
                valid_to_register = false;
            } else if(!Arrays.equals(password_input.getPassword(), password1_input.getPassword())) {
                setInvalidBorder(password1_input);
                setInvalidBorder(password_input);
                displayError(password1_error, "Passwords DO NOT Match!");
                displayError(password_error, "Passwords DO NOT Match!");
                valid_to_register = false;
            }else {
                resetBorder(password_input);
                displayError(password_error, "");
            }
        }
        if(password1.isEmpty() || password1.equals("Confirm password...")) {
                setInvalidBorder(password1_input);
                displayError(password1_error, "Field Required!");
                valid_to_register = false;
        }
        
        if(!user_role.isSelected() && !admin_role.isSelected()) {
            role_panel.setBorder(BorderFactory.createTitledBorder(
                BorderFactory.createLineBorder(Color.RED, 2), "Role"
            ));
            displayError(role_error, "Select a Role!");
            valid_to_register = false;
        }
        
        // idk wtf is ts tbh...
        try {
            if(conn.fieldExists("username", username) || conn.fieldExists("email", email)){
                if(conn.fieldExists("username", username)){
                    setInvalidBorder(username_input);
                    displayError(username_error, "Username Already Taken!");
                    valid_to_register = false;
                }
                if(conn.fieldExists("email", email)){
                    setInvalidBorder(email_input);
                    displayError(email_error, "Email Already Taken!");
                    valid_to_register = false;
                }
            }else{
                if(valid_to_register) {
                    conn.insertData("INSERT INTO `user` (name, username, email, password, role, status) VALUES ('"+name+"','"+username+"', '"+email+"', '"+hashedPassword+"', '"+role+"', '"+status+"')");
                    conn.insertLog(conn.getLastInsertedId("user"), "New user registered: " + username);
                    
                    JOptionPane.showMessageDialog(null, "Registered Successfully!");

                    new Login().setVisible(true);
                    this.dispose();
                }
            }
        } catch (SQLException e) {
            System.out.println("Can't Connect to Database: " + e.getMessage());
        }
    }//GEN-LAST:event_register_buttonMouseClicked
    
    private void role_panelFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_role_panelFocusGained
        
    }//GEN-LAST:event_role_panelFocusGained

    private void name_inputFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_name_inputFocusGained
        if (name_input.getText().equals("Enter full name...")) {
            name_input.setText("");  
            name_input.setForeground(Color.BLACK); 
        }
        
    }//GEN-LAST:event_name_inputFocusGained

    private void name_inputFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_name_inputFocusLost
        if (name_input.getText().trim().isEmpty()) {
            name_input.setText("Enter full name...");
            name_input.setForeground(Color.GRAY);
        }
        resetBorder(name_input);
        displayError(name_error, "");
    }//GEN-LAST:event_name_inputFocusLost

    private void close_buttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_close_buttonMouseClicked
        System.exit(0);
    }//GEN-LAST:event_close_buttonMouseClicked

    private void minimize_buttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimize_buttonMouseClicked
        setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_minimize_buttonMouseClicked
      
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Register().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton admin_role;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JLabel close_button;
    private javax.swing.JLabel email_error;
    private javax.swing.JTextField email_input;
    private javax.swing.JLabel email_pic;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel leek;
    private javax.swing.JLabel minimize_button;
    private javax.swing.JLabel name_error;
    private javax.swing.JTextField name_input;
    private javax.swing.JLabel name_pic;
    private javax.swing.JLabel pass;
    private javax.swing.JLabel pass1;
    private javax.swing.JLabel password1_error;
    private javax.swing.JPasswordField password1_input;
    private javax.swing.JLabel password_error;
    private javax.swing.JPasswordField password_input;
    private javax.swing.JButton register_button;
    private javax.swing.JLabel role_error;
    private javax.swing.JPanel role_panel;
    private javax.swing.JLabel show_pass;
    private javax.swing.JLabel show_pass1;
    private javax.swing.JLabel to_login;
    private javax.swing.JLabel user;
    private javax.swing.JRadioButton user_role;
    private javax.swing.JLabel username_error;
    private javax.swing.JTextField username_input;
    // End of variables declaration//GEN-END:variables

}
