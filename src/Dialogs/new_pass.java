/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Dialogs;

import static Dialogs.reset_code.userId;
import config.Session;
import config.Utility;
import config.db_connector;
import java.awt.Color;
import java.awt.Font;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

public class new_pass extends javax.swing.JDialog {
    
    db_connector conn = new db_connector();
    static new_pass instance;
    
    /**
     * Creates new form new_pass
     * @param parent
     * @param modal
     */
    public new_pass(java.awt.Dialog parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        setLabels();
        Utility.setBorders(newpass_field, newpass2_field);
    }
    
    private void setLabels() {
        JLabel[] labels = {close_button, show_pass, show_pass2};
        String[] paths = {"close.png", "hidden.png", "hidden.png"};
        SwingUtilities.invokeLater(() -> {
            Utility.setIcons(labels, paths);
        });
    } 
    
    public static void newPassDialog(JDialog parentDialog) {

        if (instance == null) {
            instance = new new_pass(parentDialog, true);
            centerDialog(parentDialog);
        }

        if (!instance.isVisible()) {
            centerDialog(parentDialog);
            instance.setVisible(true);
        }
    }

    private static void centerDialog(JDialog parentDialog) {
        if (instance != null && parentDialog != null) {
            int x = parentDialog.getX() + (parentDialog.getWidth() - instance.getWidth()) / 2;
            int y = parentDialog.getY() + (parentDialog.getHeight() - instance.getHeight()) / 2;
            instance.setLocation(x, y);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        close_button = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        show_pass2 = new javax.swing.JLabel();
        show_pass = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        newpass_error = new javax.swing.JLabel();
        newpass2_error = new javax.swing.JLabel();
        newpass_field = new javax.swing.JPasswordField();
        newpass2_field = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(55, 59, 62), 2));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(55, 59, 62));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        close_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/close.png"))); // NOI18N
        close_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                close_buttonMouseClicked(evt);
            }
        });
        jPanel2.add(close_button, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 0, 40, 40));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 420, 40));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 28)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Create a New Password");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 130, 420, 60));

        show_pass2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/hidden.png"))); // NOI18N
        show_pass2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                show_pass2MouseClicked(evt);
            }
        });
        jPanel1.add(show_pass2, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 290, 40, 40));

        show_pass.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/hidden.png"))); // NOI18N
        show_pass.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                show_passMouseClicked(evt);
            }
        });
        jPanel1.add(show_pass, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 230, 40, 40));

        jPanel3.setBackground(new java.awt.Color(19, 122, 127));
        jPanel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel3MouseClicked(evt);
            }
        });
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Change Password");
        jPanel3.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(45, -1, 190, 40));

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 350, 280, 40));

        newpass_error.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        newpass_error.setForeground(new java.awt.Color(255, 0, 0));
        newpass_error.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jPanel1.add(newpass_error, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 270, 250, 10));

        newpass2_error.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        newpass2_error.setForeground(new java.awt.Color(255, 0, 0));
        newpass2_error.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jPanel1.add(newpass2_error, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 330, 250, 10));

        newpass_field.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        newpass_field.setText("New password");
        newpass_field.setEchoChar((char) 0);
        newpass_field.setForeground(Color.GRAY);
        newpass_field.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                newpass_fieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                newpass_fieldFocusLost(evt);
            }
        });
        newpass_field.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                newpass_fieldKeyPressed(evt);
            }
        });
        jPanel1.add(newpass_field, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 230, 280, 40));

        newpass2_field.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        newpass2_field.setText("Confirm password");
        newpass2_field.setEchoChar((char) 0);
        newpass2_field.setForeground(Color.GRAY);
        newpass2_field.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                newpass2_fieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                newpass2_fieldFocusLost(evt);
            }
        });
        newpass2_field.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                newpass2_fieldKeyPressed(evt);
            }
        });
        jPanel1.add(newpass2_field, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 290, 280, 40));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 482, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void close_buttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_close_buttonMouseClicked
        this.dispose();
        instance = null;
    }//GEN-LAST:event_close_buttonMouseClicked

    private void jPanel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel3MouseClicked
        jPanel3.requestFocusInWindow();
        
        String newPass = newpass_field.getText().trim();
        String confirmPass = newpass2_field.getText().trim();
        boolean valid = true;

        if (newPass.isEmpty() || newPass.equals("New Password")) {
            Utility.setInvalidBorder(newpass_field);
            newpass_error.setText("Field Required");
            valid = false;
        }
        if (confirmPass.isEmpty() || confirmPass.equals("Confirm Password")) {
            Utility.setInvalidBorder(newpass2_field);
            newpass_error.setText("Field Required");
            valid = false;
        }
        if (!newPass.equals(confirmPass)) {
            Utility.setInvalidBorder(newpass_field);
            Utility.setInvalidBorder(newpass2_field);
            newpass_error.setText("Passwords do not match.");
            valid = false;
        }
        if (newPass.length() < 8) {
            Utility.setInvalidBorder(newpass_field);
            newpass_error.setText("Password must be at least 8 characters.");
            valid = false;
        }

        if (!valid) {
            return;
        }
        
        String hashed_pass = Utility.hashPassword(newPass);
        
        String updateQuery = "UPDATE user SET password = '" + hashed_pass + "', verification_code = NULL WHERE id = " + Session.getInstance().getUserId();
        db_connector.updateDatabase(updateQuery);
        conn.insertLog(Session.getInstance().getUserId(), "Password reset via forgot password");
        CustomMessageDialog.showMessage(null, "Password successfully updated!", "Success");
        this.dispose();
        instance = null;
        
        Session.getInstance().clearSession();
    }//GEN-LAST:event_jPanel3MouseClicked
    
    private boolean pass_visible = false;
    private void show_passMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_show_passMouseClicked
        pass_visible = !pass_visible;
        String currentText = newpass_field.getText().trim();

        if (pass_visible) {
            if (!currentText.equals("New password")) {
                newpass_field.setEchoChar((char) 0);
            }
            show_pass.setIcon(Utility.resizeImage("/images/eye.png", show_pass));
        } else {
            if (!currentText.equals("New password")) {
                newpass_field.setEchoChar('•');
            }
            show_pass.setIcon(Utility.resizeImage("/images/hidden.png", show_pass)); 
        }
    }//GEN-LAST:event_show_passMouseClicked

    private void newpass_fieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_newpass_fieldFocusGained
        if (newpass_field.getText().trim().equals("New password")) {
            newpass_field.setText("");
            newpass_field.setEchoChar('•');
            newpass_field.setForeground(Color.BLACK);
            newpass_field.setFont(new Font("Arial", Font.PLAIN, 13));
        } 
    }//GEN-LAST:event_newpass_fieldFocusGained

    private void newpass_fieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_newpass_fieldFocusLost
        if (newpass_field.getText().trim().isEmpty()) {
            newpass_field.setText("New password");
            newpass_field.setEchoChar((char) 0);
            newpass_field.setForeground(Color.GRAY);
            newpass_field.setFont(new Font("Arial", Font.PLAIN, 13));
        }
    }//GEN-LAST:event_newpass_fieldFocusLost

    private void newpass_fieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_newpass_fieldKeyPressed
        newpass_error.setText("");
        newpass2_error.setText("");
        
        Utility.resetBorder(newpass_field);
        Utility.resetBorder(newpass2_field);
    }//GEN-LAST:event_newpass_fieldKeyPressed

    private void newpass2_fieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_newpass2_fieldFocusGained
        if (newpass2_field.getText().trim().equals("Confirm password")) {
            newpass2_field.setText("");
            newpass2_field.setEchoChar('•');
            newpass2_field.setForeground(Color.BLACK);
            newpass2_field.setFont(new Font("Arial", Font.PLAIN, 13));
        } 
    }//GEN-LAST:event_newpass2_fieldFocusGained

    private void newpass2_fieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_newpass2_fieldFocusLost
        if (newpass2_field.getText().trim().isEmpty()) {
            newpass2_field.setText("Confirm password");
            newpass2_field.setEchoChar((char) 0);
            newpass2_field.setForeground(Color.GRAY);
            newpass2_field.setFont(new Font("Arial", Font.PLAIN, 13));
        }
    }//GEN-LAST:event_newpass2_fieldFocusLost

    private void newpass2_fieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_newpass2_fieldKeyPressed
        newpass_error.setText("");
        newpass2_error.setText("");
        
        Utility.resetBorder(newpass_field);
        Utility.resetBorder(newpass2_field);
    }//GEN-LAST:event_newpass2_fieldKeyPressed
    
    private boolean pass2_visible = false;
    private void show_pass2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_show_pass2MouseClicked
        pass2_visible = !pass2_visible;
        String currentText = newpass2_field.getText().trim();

        if (pass2_visible) {
            if (!currentText.equals("Confirm password")) {
                newpass2_field.setEchoChar((char) 0);
            }
            show_pass2.setIcon(Utility.resizeImage("/images/eye.png", show_pass2));
        } else {
            if (!currentText.equals("Confirm password")) {
                newpass2_field.setEchoChar('•');
            }
            show_pass2.setIcon(Utility.resizeImage("/images/hidden.png", show_pass2)); 
        }
    }//GEN-LAST:event_show_pass2MouseClicked
  
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel close_button;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel newpass2_error;
    private javax.swing.JPasswordField newpass2_field;
    private javax.swing.JLabel newpass_error;
    private javax.swing.JPasswordField newpass_field;
    private javax.swing.JLabel show_pass;
    private javax.swing.JLabel show_pass2;
    // End of variables declaration//GEN-END:variables
}
